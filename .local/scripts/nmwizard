#!/bin/bash
if [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
	echo "More intuitive UI for connecting to scanned networks."
	exit 1
fi

interface="wlp3s0"
notify-send "Network scanning started" -t 2000

# refresh device list
nmcli device wifi rescan
sleep 1

# get all unique ssids in range
wifis=$(nmcli -t -f SSID dev wifi | sed '/^\s*$/d' | sort | uniq)

# put them in dmenu and retrieve selected
selected=$(echo "$wifis" | dmenu $(echo $DMENU_WHITE_GREEN $DMENU_CENTER_TOP) -p "Select network: " -i -l $(echo "$wifis" | wc -l))

# if there has been an error
if [ "$selected" = "" ]; then
	echo "No network specified. Exiting."
	exit 1
fi

# what nmcli puts to stdout
connresult=$(nmcli device wifi connect "$selected" ifname "$interface")

echo "Selected: $selected"
echo "Interface: $interface"
echo "Connresult: $connresult"

#exit 1

# nmcli should put something to stdout so this is interpreted as an error
if [ "$connresult" = "" ]; then
	exit 1
fi

# result should look like this, hence regex below
# Device 'wlp3s0' successfully activated with '47c28bac-51da-4449-9229-68461eedb2ab'.
SUCCRGX="Device '$interface' successfully activated with '[-a-zA-Z0-9]{1,}'."
#        Device 'wlp3s0' successfully activated with '66a2915a-db75-43bf-a61b-ad6806681b4b'.
# compare result to regex
if [[ ! "$connresult" =~ $SUCCRGX ]]; then
	echo "Connection result unsuccessful!"
	password=$(dmenu -p $(echo $DMENU_WHITE_GREEN $DMENU_CENTER_TOP) "Password for $selected: " -P)

	# do not record history for security reasons
	HISTFILE=/dev/null

	if [ "$password" = "" ]; then
		notify-send "Password not spefied. Exiting."
		exit 1
	fi

	notify-send -t 1000 "Setting up connection!"

	# delete connection so it forgets old passwd	
	nmcli con delete "$selected"
	sleep 1

	# connect
	nmcli device wifi connect "$selected" password "$password" ifname "$interface"
fi

# if successful notify
notify-send "Connection to $selected successful"

exit 0
